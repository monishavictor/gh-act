# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: ci

on:
  # push:
  #   branches: ['master', 'release-*', 'development', 'bugfix/*', 'feat/*']
  pull_request:
    branches: ['master', 'release-*', 'development', 'main']
jobs:
  hello-job:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4 
    - name: hello
      id: hello
      run: |
        echo "hello"
        echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
        echo "${GITHUB_PATH}"
        echo "GITHUB_ACTION: ${GITHUB_ACTION}"
        echo "${GITHUB_RUN_NUMBER}"
        echo "${RUNNER_NAME}"
        echo "GITHUB_REPOSITORY_OWNER_ID: ${GITHUB_REPOSITORY_OWNER_ID}"
        echo "${GITHUB_TRIGGERING_ACTOR}"
        echo "${GITHUB_REF_TYPE}"
        echo "${GITHUB_REPOSITORY_ID}"
        echo "GITHUB_SHA: ${GITHUB_SHA}"
        echo "${GITHUB_WORKFLOW_REF}"
        echo "${GITHUB_REF}"
        echo "GITHUB_API_URL: ${GITHUB_API_URL}"
        echo "${GITHUB_EVENT_PATH}"
        echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
        echo "${GITHUB_STEP_SUMMARY}"
        echo "${GITHUB_ACTOR}"
        echo "GITHUB_SERVER_URL: ${GITHUB_SERVER_URL}"
        echo "${GITHUB_WORKFLOW_SHA}"
        echo "GITHUB_REF_NAME: ${GITHUB_REF_NAME}"
        echo "${GITHUB_JOB}"
        echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
        echo "GITHUB_BASE_REF: ${GITHUB_BASE_REF}"
        echo "GITHUB_REPOSITORY_OWNER: ${GITHUB_REPOSITORY_OWNER}"
        echo "GITHUB_HEAD_REF: ${GITHUB_HEAD_REF}"
        echo "${GITHUB_ACTION_REF}"
        echo "GITHUB_OUTPUT: ${GITHUB_OUTPUT}"
        echo "-----"

        cat "${GITHUB_EVENT_PATH}"

        ./scripts/gh-actions/is_open_pull_request.sh

  job1:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run pre-commit hooks & Type check
      id: 'pre-commit'
      run: |
        echo "Run pre-commit hooks & Type check"

  job2:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run Unit tests
      id: 'run-unit-tests'
      run: |
        echo "Run Unit tests"
  job3:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build Application container
      id: 'build-container-image'
      run: |
        echo "Build Application container"

  job4:
    runs-on: ubuntu-latest
    needs: ['job1', 'job2', 'job3']
    steps:
    - uses: actions/checkout@v4
    - name: e2e - bucket 1
      id: 'e2e-bucket-1'
      run: |
        echo "e2e - bucket 1"

  job5:
    runs-on: ubuntu-latest
    needs: ['job1', 'job2', 'job3']
    steps:
    - uses: actions/checkout@v4
    - name: e2e - bucket 2
      id: 'e2e-bucket-2'
      run: |
        echo "e2e - bucket 2"

  job6:
    runs-on: ubuntu-latest
    needs: ['job1', 'job2', 'job3']
    steps:
    - uses: actions/checkout@v4
    - name: e2e - bucket 3
      id: 'e2e-bucket-3'
      run: |
        echo "e2e - bucket 3"

  job7:
    runs-on: ubuntu-latest
    needs: ['job1', 'job2', 'job3']
    steps:
    - uses: actions/checkout@v4
    - name: e2e - bucket 4
      id: 'e2e-bucket-4'
      run: |
        echo "e2e - bucket 4"

  job8a:
    runs-on: ubuntu-latest
    needs: [job4, job5, job6, job7]
    if: github.base_ref == 'main'
    steps:
      - uses: actions/checkout@v4
      - name: 'push image to registry for main'
        run: |
          echo "push image to registry - main"

  job8b:
    runs-on: ubuntu-latest
    needs: [job4, job5, job6, job7]
    if: github.base_ref == 'release'
    steps:
      - uses: actions/checkout@v4
      - name: 'push img for release'
        run: |
          echo "push image to registry - release"

  job9:
    runs-on: ubuntu-latest
    needs: job8a
    steps:
      - uses: actions/checkout@v4
      - name: 'build feat env'
        run: |
          echo "build feat environment"

  job10:
    runs-on: ubuntu-latest
    needs: job8b
    steps:
      - uses: actions/checkout@v4
      - name: 'build feat env - release'
        run: |
          echo "build feat environment - release"          